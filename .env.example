# Support Chat v2 — Example Environment

# Core service
PORT=4012
## Bind only to localhost; Nginx will proxy (TLS terminated in front)
BIND_HOST=127.0.0.1
NODE_ENV=development

# Postgres (Prisma) — use distinct DB names per env
# For development (replace placeholders locally only; do not commit real creds)
DATABASE_URL=postgresql://DB_USER:DB_PASS@127.0.0.1:5432/support_chat_dev?schema=public
# For production, set via /etc/chatorical/support-chat-v2.env
# DATABASE_URL=postgresql://DB_USER:DB_PASS@DB_HOST:5432/support_chat_prod?schema=public

# Redis
REDIS_URL=redis://127.0.0.1:6379/3

# Auth & security
# Prefer centralized, file-based secrets under /etc/chatorical
S2S_TOKEN_FILE=/etc/chatorical/secrets/s2s_token
CONVERSATION_JWT_SECRET_FILE=/etc/chatorical/secrets/conversation_jwt_secret
KMS_MASTER_KEY_FILE=/etc/chatorical/secrets/kms_master_key
# Legacy env fallbacks (discouraged):
# CONVERSATION_JWT_SECRET=replace-with-long-random
# SERVICE_TOKEN=replace-with-legacy-admin-token

# Widget / CORS
# Public API/widget origin (service will serve /widget.js and /v1/* behind Nginx)
PUBLIC_ORIGIN=https://api.chatorical.com
# Browser origins allowed to call the API (comma-separated)
ALLOWED_ORIGINS=https://chatorical.com,https://admin.chatorical.com
# Dev overrides (uncomment locally)
# ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000

# Telegram (per-tenant in v2; defaults for the legacy/default tenant)
BOT_TOKEN=
WEBHOOK_SECRET=
TELEGRAM_HEADER_SECRET=
SUPPORT_GROUP_ID=

# Feature flags
# Enable Redis pub/sub from day 1
FEATURE_REDIS_PUBSUB=true
# Enforce TenantContext as soon as repositories are wired; keep false in early dev to avoid blockers
FEATURE_TENANT_CONTEXT_ENFORCED=false

# Logging
# production: pino std out (json), dev: pretty print
LOG_PRETTY=true
LOG_LEVEL=info


